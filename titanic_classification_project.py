# -*- coding: utf-8 -*-
"""Titanic Classification Project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dT3gb43O9wmHSzFywggA2ohFiUFqD1zz
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

data = pd.read_csv('Titanic.csv')

data

"""Display top 15 rows of the dataset and last 10 rows from the dataset"""

#Displaying top 15 rows
data.head(n=15)

#Display last 10 rows from the dataset
data.tail(n=10)

"""Find the shape of your dataset"""

print(data.shape)
print("no of rows=",data.shape[0])
print("no of columns=",data.shape[1])

"""Get all information about the dataset"""

data.info()

#information about specific column
data['Age'].info()

"""Get overall statistics about the dataset"""

#For numeric column only
data.describe()

#overall statistics of each column
data.describe(include='all')

"""Data Filtering"""

#all columns names
data.columns

#Displaying single column
data['Name']

#Displaying multiple columns
data[['Ticket','Fare','Age']]

data['Sex']=='male'

#total number of male persons travelling in Titanic
sum(data['Sex']=='male')

#All the female persons details travelling in Titanic
data[data['Sex']=='female']

#Deatils of all non-survived persons
data[data['Survived']==0]

#total number of not survived person
len(data[data['Survived']==0])

"""Check null values in the dataset"""

data.isnull()

#check the null values column wise
data.isnull().sum()

import seaborn as sns

sns.heatmap(data.isnull())

#Percentage of missing values in each column
per_missing=data.isnull().sum()*100/len(data)
per_missing

"""Drop specific unwanted column"""

#Drop the Cabin column from the dataset
data.drop("Cabin",axis=1,inplace=True)

#Modified column names
data.columns

"""Missing values handling"""

data['Embarked'].mode()

data.isnull().sum()#2 null values in Embarked column

#fill value'S' in place of null positions
data['Embarked'].fillna('S',inplace=True)

data.isnull().sum()

data['Age']

#Filled the null value position of age column with mean value of data
data['Age'].fillna(data['Age'].mean(),inplace=True)

data.isnull().sum()

"""Categorical Data Encoding"""

#Unique Values in the sex column
data['Sex'].nunique()

#assign male as 1 and female as 0 using map function
data['Gender']=data['Sex'].map({'male':1,'female':0})

#Displaying last 5 rows
data.tail()

#map the values (male=1,female=0) and store in x
x=data['Sex'].map({'male':1,'female':0})

#Add column in a specific location 5
data.insert(5,'Gender_new',x)

data.head(1)

print(data['Embarked'].nunique())
print(data['Embarked'].unique())

pd.get_dummies(data,columns=['Embarked'])

pd.get_dummies(data,columns=['Embarked'],drop_first=True)

data1=pd.get_dummies(data,columns=['Embarked'],drop_first=True)

data1.head(2)

"""Univariate Analysis
Total number of survived and died persons
"""

data['Survived'].value_counts()

sns.countplot(data=data,x='Survived')
plt.show()

"""How many passengers werw in 1st class,2nd class and 3rd class"""

data.columns

data['Pclass'].value_counts()

sns.countplot(data=data,x='Pclass')
plt.show()

data['Pclass'].hist()

"""Number of Male and Female passenger"""

data['Sex'].value_counts()

data['Sex'].hist()

sns.countplot(data=data,x='Sex')
plt.show()

plt.hist(data['Age'])

import seaborn as sns

"""Bivariate Analysis"""

data.columns

"""Who has better chance of survival male or female"""

sns.barplot(x='Sex',y='Survived',data=data)

"""Which passenger class has better chance of survival(First,Second or Third class)"""

sns.barplot(x='Pclass',y='Survived',data=data)

"""
Feature Engineering"""

data.columns

data['family_size']=data['SibSp']+data['Parch']

data.head(1)

